name: Build and Test
on: [ pull_request ]
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  HOST: www.haussmann-medias.local
  APP_PATH: /var/www/haussmann-medias
  BUILDER_TAG: haussmann-medias-main-builder
  DOCKER_COMPOSE_FILE: docker/docker-compose.test.yaml
jobs:
  build:
    if: ${{ github.actor != 'renovate[bot]' }}
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build container
        run: docker build -t ${{ env.BUILDER_TAG }} - < docker/app-builder/Dockerfile
      - name: Build
        run: docker/script/run-build.sh
      - name: Package artifact
        run: |
          mkdir /tmp/build
          tar czf /tmp/build/archive.tar.gz \
            --exclude=app/var/cache \
            --exclude=app/var/logs \
            --anchored --exclude=cache \
            *
      - name: Store artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: /tmp/build
          retention-days: 1

  code-style:
    #    if: ${{ false }}
    name: Code style checks
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: /tmp/build/
      - name: Extract archive
        run: |
          tar xzf /tmp/build/archive.tar.gz
          rm -rf /tmp/build
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build container
        run: docker build -t ${{ env.BUILDER_TAG }} - < docker/app-builder/Dockerfile
      - name: Run analyses
        run: |
          docker run -v$(pwd):${{ env.APP_PATH }} \
            -w ${{ env.APP_PATH }}/app \
            ${{ env.BUILDER_TAG }} \
            bin/phing analyze
      - name: Clean up
        run: docker rmi -f ${{ env.BUILDER_TAG }}